const t={root:null,rootMargin:"0px",threshold:1};class e{constructor(t){this.el=document.querySelector(t)}log(){console.log("element:",this.el)}scroll(e,n,i=t){let o=new IntersectionObserver((t=>{t.forEach((t=>{const i=t.intersectionRatio;"enter"===e&&t.isIntersecting&&this.scrollEnter(n),"exit"===e&&0===i&&this.scrollExit(n)}))}),i);const r=()=>{o.observe(this.el),requestAnimationFrame(r)};requestAnimationFrame(r)}scrollExit(t){t(this.el)}scrollEnter(t){t(this.el)}click(t){this.el.addEventListener("click",(e=>{t(this.el,e)}))}}function n(t,e){window.addEventListener("resize",(n=>{const i=n.target.innerWidth,o=t.split(/[0-9]/)[0],r=parseInt(t.match(/\d+/g)[0]);">="===o?r>=i&&e(n):"<="===o?r<=i&&e(n):">"===o?r>i&&e(n):"<"===o?r<i&&e(n):"="===o&&i===r&&e(n)}))}function i(t,e,n,i){const o=t.top-e.top,r=t.left-e.left,s=t.height/e.height,l=t.width/e.width,c=n.animate([{transformOrigin:"top left",transform:`translate3d(${r}px, ${o}px, 0) scale(${l}, ${s})`},{transformOrigin:"top left",transform:"none"}],{duration:i.duration,easing:i.easing,fill:"both"});"reverse"===i.direction?c.reverse():c.play(),i.done&&(c.onfinish=i.done)}function o(t,e,n={duration:300,easing:"ease-in-out",direction:"forwards"}){const o=document.querySelector(t),r=o.getBoundingClientRect();e(o);i(r,o.getBoundingClientRect(),o,n)}function r(t,e,n,o={duration:300,easing:"ease-in-out",direction:"forwards"}){const r=document.querySelector(t),s=r.getBoundingClientRect();r.style.visibility="hidden";const l=document.querySelector(e),c=l.getBoundingClientRect();n(l),i(s,c,l,o)}export{e as Watcher,r as crossfade,o as flip,n as screen};
