function t(t,e=document){return"string"==typeof t?e.querySelector(t):t}function e(t,e=document){return"string"==typeof t?e.querySelectorAll(t):t}function n(t,e,n,i={duration:300,easing:"ease-in-out",direction:"forwards",scale:!0}){const{dx:r,dy:s,dh:o,dw:c}=function(t,e){return{dx:t.left-e.left,dy:t.top-e.top,dh:t.height/e.height,dw:t.width/e.width}}(t,e),l=n.animate([{transformOrigin:"top left",transform:`translate3d(${r}px, ${s}px, 0)  scale(${c}, ${o})`},{transformOrigin:"top left",transform:"none"}],{duration:i.duration,easing:i.easing,fill:"both"});"reverse"===i.direction?l.reverse():l.play(),i.done&&(l.onfinish=i.done)}function i(t){const e=t[0],n=t[1];return{inc:function(t,i){return t===n?e:t+i},dec:function(t,i){return t===e?n:t-i}}}const r={root:null,rootMargin:"0px",threshold:1};class s{constructor(e){this.el=t(e)}log(){console.log("element:",this.el)}node(){return this.el}scroll(t,e,n=r){let i=new IntersectionObserver((n=>{n.forEach((n=>{const i=n.intersectionRatio;"enter"===t&&n.isIntersecting&&this.scrollEnter(e),"exit"===t&&0===i&&this.scrollExit(e)}))}),n);const s=()=>{i.observe(this.el),requestAnimationFrame(s)};requestAnimationFrame(s)}scrollExit(t){t(this.el)}scrollEnter(t){t(this.el)}click(t){this.el.addEventListener("click",(e=>{t(this.el,e)}))}}function o(t,e){const n=window.matchMedia(t);return n.matches&&e.true?e.true():e.false?e.false():void n.addEventListener("change",(t=>t.matches&&e.true?e.true():e.false?e.false():void 0))}function c(e,i,r){const s=t(e),o=s.getBoundingClientRect();i(s);n(o,s.getBoundingClientRect(),s,r)}function l(e,i,r,s){const o=t(e),c=o.getBoundingClientRect();o.style.visibility="hidden";const l=t(i);r(l);n(c,l.getBoundingClientRect(),l,s)}function h(e,i,r,s){const o=t(e),c=o.querySelectorAll(i);let l=[];Array.from(c).map((t=>{const e=t.getBoundingClientRect();l.push(e)})),r(o),c.forEach(((t,e)=>{const i=t.getBoundingClientRect();n(l[e],i,t,s)}))}const d={duration:150,easing:"linear"};function u(e,n,i=d){const r=t(e),s=r.clientHeight;n();const o=r.clientHeight;r.animate([{transformOrigin:"top left",height:s+"px"},{transformOrigin:"top left",height:o+"px"}],i)}function a(e,n){const i=t(n),r=i.getAttribute("data-transition");function s(t){i.setAttribute(`data-${r}`,t)}i.removeAttribute("style");const{clientHeight:o,clientWidth:c}=i;"mount"===e?(i.removeAttribute("aria-hidden"),i.style=`\n      visibility: visible;\n      height: ${o}px;\n      width: ${c}px;\n    `,s("enter"),i.addEventListener("transitionend",(()=>{i.style=`\n      visibility: visible;\n      height: ${o}px;\n      width: ${c}px;\n      `}))):"unmount"===e&&(s("exit"),i.setAttribute("aria-hidden","true"),i.addEventListener("transitionend",(()=>{i.style="\n      visibility: hidden;\n      height: 0px;\n      width: 0px;\n      padding: 0px;\n      "})))}const g={lerp:()=>console.log("lerp")};class m{constructor(n,i){this.options=i,this.el=t(n),this.items=e(i.itemSelector,this.el),this.currentIndex=this.options.start}node(){return this.el}getItems(){return this.items}getIndex(){return this.currentIndex}getCurrent(){return{index:this.currentIndex,element:this.items[this.currentIndex]}}getNext(){const t=i([0,this.items.length-1]).inc(this.currentIndex,1);return{index:t,element:this.items[t]}}getPrevious(){const t=i([0,this.items.length-1]).dec(this.currentIndex,1);return{index:t,element:this.items[t]}}getItem(t){return{index:t,element:this.items[t]}}next(t){this.currentIndex=i([0,this.items.length-1]).inc(this.currentIndex,1),t&&t(this.currentIndex)}previous(t){this.currentIndex=i([0,this.items.length-1]).dec(this.currentIndex,1),t&&t(this.currentIndex)}log(){console.log({el:this.el,options:this.options,items:this.items,currentIndex:this.currentIndex,currentItem:this.items[this.currentIndex]})}}export{m as Gallery,s as Watcher,u as animateHeightAuto,h as animateLayout,a as animateOn,l as crossfade,c as flip,e as getAllElements,t as getElement,i as loop,g as math,n as runFLIP,o as screen};
