!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).humdinger={})}(this,(function(e){"use strict";function t(e,t=document){return"string"==typeof e?t.querySelector(e):e}function n(e,t=document){return"string"==typeof e?t.querySelectorAll(e):e}function i(e,t,n,i={duration:300,easing:"ease-in-out",direction:"forwards",scale:!0}){const r=e.top-t.top,s=e.left-t.left;let o=e.height/t.height,c=e.width/t.width;console.log(e.height,t.height,o,c);const l=n.animate([{transformOrigin:"top left",transform:`translate3d(${s}px, ${r}px, 0)  scale(${c}, ${o})`},{transformOrigin:"top left",transform:"none"}],{duration:i.duration,easing:i.easing,fill:"both"});"reverse"===i.direction?l.reverse():l.play(),i.done&&(l.onfinish=i.done)}function r(e){const t=e[0],n=e[1];return{inc:function(e,i){return e===n?t:e+i},dec:function(e,i){return e===t?n:e-i}}}const s={root:null,rootMargin:"0px",threshold:1};const o={duration:150,easing:"linear"};const c={lerp:()=>console.log("lerp")};e.Gallery=class{constructor(e,i){this.options=i,this.el=t(e),this.items=n(i.itemSelector,this.el),this.currentIndex=this.options.start}node(){return this.el}getItems(){return this.items}getIndex(){return this.currentIndex}getCurrent(){return{index:this.currentIndex,element:this.items[this.currentIndex]}}getNext(){const e=r([0,this.items.length-1]).inc(this.currentIndex,1);return{index:e,element:this.items[e]}}getPrevious(){const e=r([0,this.items.length-1]).dec(this.currentIndex,1);return{index:e,element:this.items[e]}}getItem(e){return{index:e,element:this.items[e]}}next(e){this.currentIndex=r([0,this.items.length-1]).inc(this.currentIndex,1),e&&e(this.currentIndex)}previous(e){this.currentIndex=r([0,this.items.length-1]).dec(this.currentIndex,1),e&&e(this.currentIndex)}log(){console.log({el:this.el,options:this.options,items:this.items,currentIndex:this.currentIndex,currentItem:this.items[this.currentIndex]})}},e.Watcher=class{constructor(e){this.el=t(e)}log(){console.log("element:",this.el)}node(){return this.el}scroll(e,t,n=s){let i=new IntersectionObserver((n=>{n.forEach((n=>{const i=n.intersectionRatio;"enter"===e&&n.isIntersecting&&this.scrollEnter(t),"exit"===e&&0===i&&this.scrollExit(t)}))}),n);const r=()=>{i.observe(this.el),requestAnimationFrame(r)};requestAnimationFrame(r)}scrollExit(e){e(this.el)}scrollEnter(e){e(this.el)}click(e){this.el.addEventListener("click",(t=>{e(this.el,t)}))}},e.animateHeightAuto=function(e,t,n=o){const i=e.clientHeight;t();const r=e.clientHeight;e.animate([{transformOrigin:"top left",height:i+"px"},{transformOrigin:"top left",height:r+"px"}],n)},e.animateLayout=function(e,n,r,s){const o=t(e),c=o.querySelectorAll(n);let l=[];Array.from(c).map((e=>{const t=e.getBoundingClientRect();l.push(t)})),r(o),c.forEach(((e,t)=>{const n=e.getBoundingClientRect();i(l[t],n,e,s)}))},e.crossfade=function(e,n,r,s){const o=t(e),c=o.getBoundingClientRect();o.style.visibility="hidden";const l=t(n);r(l),i(c,l.getBoundingClientRect(),l,s)},e.flip=function(e,n,r){const s=t(e),o=s.getBoundingClientRect();n(s),i(o,s.getBoundingClientRect(),s,r)},e.getAllElements=n,e.getElement=t,e.loop=r,e.math=c,e.runFLIP=i,e.screen=function(e,t){const n=window.matchMedia(e);return n.matches&&t.true?t.true():t.false?t.false():void n.addEventListener("change",(e=>e.matches&&t.true?t.true():t.false?t.false():void 0))},Object.defineProperty(e,"__esModule",{value:!0}),e[Symbol.toStringTag]="Module"}));
